@startuml
' Định dạng giấy A4 portrait (210mm x 297mm)
skinparam pageSize 210 297
skinparam pageMargin 30
skinparam defaultFontSize 12

title Register Account Use Case - Sequence Diagram

actor User
participant "Frontend" as FE
participant "AuthController" as Controller
participant "AuthService" as Service
participant "UserRepository" as UserRepo
participant "UserTokenRepository" as TokenRepo
participant "MailService" as Mail
database "Database" as DB

== User Registers ==
User -> FE : Nhập thông tin đăng ký (email, password, fullName, phone)
FE -> Controller : POST /auth/register { email, password, fullName, phone }
Controller -> Service : register(dto)
Service -> UserRepo : findOne({ email })
UserRepo -> DB : Query user by email
DB --> UserRepo : User or null
UserRepo --> Service : User or null

alt Email chưa tồn tại
    Service -> UserRepo : create user
    UserRepo -> DB : Insert user
    DB --> UserRepo : User
    UserRepo --> Service : User
    Service -> Service : generate email verification token
    Service -> TokenRepo : create EMAIL_VERIFICATION token
    TokenRepo -> DB : Insert token
    DB --> TokenRepo : OK
    TokenRepo --> Service : Token
    Service -> Mail : sendVerificationEmail(email, name, token)
    Mail -> Mail : Compose email
    Mail -> Mail : Send via nodemailer
    Mail --> Service : OK
    Service -> Service : generate access/refresh token
    Service -> TokenRepo : create REFRESH_TOKEN
    TokenRepo -> DB : Insert token
    DB --> TokenRepo : OK
    TokenRepo --> Service : Token
    Service --> Controller : { user, accessToken, refreshToken }
else Email đã tồn tại
    Service --> Controller : 409 Conflict
end
Controller --> FE : 201 Created